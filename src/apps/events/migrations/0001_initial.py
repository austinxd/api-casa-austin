# Generated by Django 4.2.11 on 2025-09-16 11:01

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clients', '0016_searchtracking_ip_address_searchtracking_referrer_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='EventCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, help_text='When the instance was created.', verbose_name='created at')),
                ('updated', models.DateTimeField(auto_now=True, help_text='The last time at the instance was modified.', verbose_name='updated at')),
                ('deleted', models.BooleanField(default=False, help_text='It can be set to false, usefull to simulate deletion')),
                ('name', models.CharField(help_text='Nombre de la categoría (ej: Sorteo, Concurso)', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Descripción de la categoría')),
                ('icon', models.CharField(blank=True, help_text='Emoji o icono representativo', max_length=10)),
                ('color', models.CharField(default='#007bff', help_text='Color en formato hex (#000000)', max_length=7)),
            ],
            options={
                'verbose_name': 'Categoría de Evento',
                'verbose_name_plural': 'Categorías de Eventos',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, help_text='When the instance was created.', verbose_name='created at')),
                ('updated', models.DateTimeField(auto_now=True, help_text='The last time at the instance was modified.', verbose_name='updated at')),
                ('deleted', models.BooleanField(default=False, help_text='It can be set to false, usefull to simulate deletion')),
                ('title', models.CharField(help_text='Título del evento', max_length=200)),
                ('description', models.TextField(help_text='Descripción detallada del evento')),
                ('image', models.ImageField(blank=True, help_text='Imagen del evento', null=True, upload_to='events/')),
                ('start_date', models.DateTimeField(help_text='Fecha y hora de inicio')),
                ('end_date', models.DateTimeField(help_text='Fecha y hora de fin')),
                ('registration_deadline', models.DateTimeField(blank=True, help_text='Fecha límite para registrarse', null=True)),
                ('location', models.CharField(blank=True, help_text='Ubicación del evento', max_length=300)),
                ('max_participants', models.PositiveIntegerField(blank=True, help_text='Máximo número de participantes', null=True)),
                ('is_public', models.BooleanField(default=True, help_text='Mostrar en listado público')),
                ('is_active', models.BooleanField(default=True, help_text='Evento activo')),
                ('status', models.CharField(choices=[('draft', 'Borrador'), ('published', 'Publicado'), ('closed', 'Cerrado'), ('cancelled', 'Cancelado')], default='draft', max_length=10)),
                ('min_points_required', models.DecimalField(decimal_places=2, default=0, help_text='Puntos mínimos requeridos para registrarse', max_digits=10)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='events.eventcategory')),
                ('required_achievements', models.ManyToManyField(blank=True, help_text='Logros requeridos para registrarse (cliente debe tener AL MENOS UNO)', to='clients.achievement')),
            ],
            options={
                'verbose_name': 'Evento',
                'verbose_name_plural': 'Eventos',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='EventRegistration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, help_text='When the instance was created.', verbose_name='created at')),
                ('updated', models.DateTimeField(auto_now=True, help_text='The last time at the instance was modified.', verbose_name='updated at')),
                ('deleted', models.BooleanField(default=False, help_text='It can be set to false, usefull to simulate deletion')),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('approved', 'Aprobado'), ('rejected', 'Rechazado'), ('cancelled', 'Cancelado')], default='pending', max_length=10)),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, help_text='Notas del registro')),
                ('admin_notes', models.TextField(blank=True, help_text='Notas del administrador')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_registrations', to='clients.clients')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='events.event')),
            ],
            options={
                'verbose_name': 'Registro de Evento',
                'verbose_name_plural': 'Registros de Eventos',
                'ordering': ['-registration_date'],
                'unique_together': {('event', 'client')},
            },
        ),
    ]
