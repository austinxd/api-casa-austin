# Generated by Django 4.2.11 on 2025-09-20 00:25

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('clients', '0020_remove_clients_clients_fb_id_unique_not_deleted'),
        ('property', '0041_latecheckoutconfig'),
        ('events', '0005_auto_20250918_2305'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='event',
            options={'ordering': ['-event_date'], 'verbose_name': 'Evento', 'verbose_name_plural': 'Eventos'},
        ),
        migrations.CreateModel(
            name='ActivityFeed',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, help_text='When the instance was created.', verbose_name='created at')),
                ('updated', models.DateTimeField(auto_now=True, help_text='The last time at the instance was modified.', verbose_name='updated at')),
                ('deleted', models.BooleanField(default=False, help_text='It can be set to false, usefull to simulate deletion')),
                ('activity_type', models.CharField(choices=[('points_earned', 'Puntos Ganados'), ('reservation_made', 'Reserva Realizada'), ('event_created', 'Evento Creado'), ('event_registration', 'Registro a Evento'), ('event_winner', 'Ganador de Evento'), ('achievement_earned', 'Logro Obtenido'), ('property_visited', 'Propiedad Visitada'), ('payment_completed', 'Pago Completado'), ('discount_used', 'Descuento Utilizado'), ('review_posted', 'Reseña Publicada'), ('staff_assigned', 'Personal Asignado'), ('milestone_reached', 'Hito Alcanzado'), ('system_update', 'Actualización del Sistema')], help_text='Tipo de actividad registrada', max_length=20)),
                ('title', models.CharField(help_text='Título descriptivo de la actividad', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Descripción detallada opcional')),
                ('activity_data', models.JSONField(blank=True, default=dict, help_text='Datos específicos de la actividad en formato JSON')),
                ('is_public', models.BooleanField(default=True, help_text='Si la actividad debe mostrarse en el feed público')),
                ('icon', models.CharField(blank=True, help_text='Emoji o icono representativo de la actividad', max_length=10)),
                ('importance_level', models.PositiveSmallIntegerField(default=1, help_text='Nivel de importancia (1=baja, 2=media, 3=alta, 4=crítica)')),
                ('client', models.ForeignKey(blank=True, help_text='Cliente relacionado con la actividad (opcional)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activities', to='clients.clients')),
                ('event', models.ForeignKey(blank=True, help_text='Evento relacionado con la actividad (opcional)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activities', to='events.event')),
                ('property_location', models.ForeignKey(blank=True, help_text='Propiedad relacionada con la actividad (opcional)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activities', to='property.property')),
            ],
            options={
                'verbose_name': 'Actividad del Feed',
                'verbose_name_plural': 'Actividades del Feed',
                'ordering': ['-created'],
                'indexes': [models.Index(fields=['activity_type', 'created'], name='events_acti_activit_58da10_idx'), models.Index(fields=['client', 'created'], name='events_acti_client__f2df01_idx'), models.Index(fields=['is_public', 'created'], name='events_acti_is_publ_44dcf8_idx')],
            },
        ),
    ]
