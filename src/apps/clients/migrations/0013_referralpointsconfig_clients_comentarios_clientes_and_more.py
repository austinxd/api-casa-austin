# Generated by Django 4.2.11 on 2025-08-15 15:45

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('property', '0011_property_banos_property_caracteristicas_and_more'),
        ('reservation', '0012_reservation_comentarios_reservas_reservation_fbc_and_more'),
        ('clients', '0012_clients_referral_code'),
    ]

    operations = [
        migrations.CreateModel(
            name='ReferralPointsConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percentage', models.DecimalField(decimal_places=2, default=10.0, help_text='Porcentaje de puntos que recibe el cliente que refirió (ej: 10.00 = 10%)', max_digits=5)),
                ('is_active', models.BooleanField(default=True, help_text='Activar/desactivar el sistema de referidos')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Configuración de Puntos por Referidos',
                'verbose_name_plural': 'Configuración de Puntos por Referidos',
                'ordering': ['-created'],
            },
        ),
        migrations.AddField(
            model_name='clients',
            name='comentarios_clientes',
            field=models.TextField(blank=True, help_text='Comentarios sobre el cliente', null=True),
        ),
        migrations.AddField(
            model_name='clients',
            name='enviado_meta',
            field=models.BooleanField(default=False, help_text='Indica si el cliente ha sido enviado a Meta Ads'),
        ),
        migrations.AddField(
            model_name='clients',
            name='is_password_set',
            field=models.BooleanField(default=False, help_text='Indica si el cliente ya configuró su contraseña'),
        ),
        migrations.AddField(
            model_name='clients',
            name='last_login',
            field=models.DateTimeField(blank=True, help_text='Último login del cliente', null=True),
        ),
        migrations.AddField(
            model_name='clients',
            name='otp_code',
            field=models.CharField(blank=True, help_text='Código OTP temporal', max_length=6, null=True),
        ),
        migrations.AddField(
            model_name='clients',
            name='otp_expires_at',
            field=models.DateTimeField(blank=True, help_text='Fecha de expiración del OTP', null=True),
        ),
        migrations.AddField(
            model_name='clients',
            name='password',
            field=models.CharField(blank=True, help_text='Contraseña hasheada del cliente', max_length=128, null=True),
        ),
        migrations.AddField(
            model_name='clients',
            name='points_balance',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Balance actual de puntos', max_digits=10),
        ),
        migrations.AddField(
            model_name='clients',
            name='points_expires_at',
            field=models.DateTimeField(blank=True, help_text='Fecha de expiración de los puntos actuales', null=True),
        ),
        migrations.AddField(
            model_name='clients',
            name='referred_by',
            field=models.ForeignKey(blank=True, help_text='Cliente que refirió a este cliente', null=True, on_delete=django.db.models.deletion.SET_NULL, to='clients.clients'),
        ),
        migrations.AlterField(
            model_name='clients',
            name='date',
            field=models.DateField(null=True),
        ),
        migrations.AlterField(
            model_name='clients',
            name='id_manychat',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='clients',
            name='sex',
            field=models.CharField(blank=True, choices=[('m', 'Masculino'), ('f', 'Femenino'), ('e', 'Empresa')], default=None, max_length=1, null=True),
        ),
        migrations.CreateModel(
            name='SearchTracking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, help_text='When the instance was created.', verbose_name='created at')),
                ('updated', models.DateTimeField(auto_now=True, help_text='The last time at the instance was modified.', verbose_name='updated at')),
                ('deleted', models.BooleanField(default=False, help_text='It can be set to false, usefull to simulate deletion')),
                ('check_in_date', models.DateField(help_text='Fecha de check-in buscada')),
                ('check_out_date', models.DateField(help_text='Fecha de check-out buscada')),
                ('guests', models.PositiveIntegerField(help_text='Número de huéspedes')),
                ('search_timestamp', models.DateTimeField(auto_now=True, help_text='Timestamp de la última búsqueda')),
                ('client', models.OneToOneField(help_text='Cliente que realiza la búsqueda', on_delete=django.db.models.deletion.CASCADE, related_name='search_tracking', to='clients.clients')),
                ('property', models.ForeignKey(blank=True, help_text='Propiedad buscada', null=True, on_delete=django.db.models.deletion.CASCADE, to='property.property')),
            ],
            options={
                'verbose_name': 'Tracking de Búsqueda',
                'verbose_name_plural': 'Tracking de Búsquedas',
                'ordering': ['-search_timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ClientPoints',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, help_text='When the instance was created.', verbose_name='created at')),
                ('updated', models.DateTimeField(auto_now=True, help_text='The last time at the instance was modified.', verbose_name='updated at')),
                ('deleted', models.BooleanField(default=False, help_text='It can be set to false, usefull to simulate deletion')),
                ('transaction_type', models.CharField(choices=[('earned', 'Puntos Ganados'), ('redeemed', 'Puntos Canjeados'), ('expired', 'Puntos Expirados'), ('refunded', 'Puntos Devueltos'), ('referral', 'Puntos por Referido')], max_length=8)),
                ('points', models.DecimalField(decimal_places=2, help_text='Cantidad de puntos (puede ser negativo para canjes)', max_digits=10)),
                ('description', models.TextField(help_text='Descripción de la transacción')),
                ('expires_at', models.DateTimeField(blank=True, help_text='Fecha de expiración de los puntos', null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='points_transactions', to='clients.clients')),
                ('referred_client', models.ForeignKey(blank=True, help_text='Cliente referido que generó estos puntos', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referral_transactions', to='clients.clients')),
                ('reservation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reservation.reservation')),
            ],
            options={
                'verbose_name': 'Transacción de Puntos',
                'verbose_name_plural': 'Transacciones de Puntos',
                'ordering': ['-created'],
            },
        ),
    ]
