# Generated by Django 4.2.11 on 2025-08-15 17:21

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('property', '0013_remove_additionalservice_properties_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AutomaticDiscount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, help_text='When the instance was created.', verbose_name='created at')),
                ('updated', models.DateTimeField(auto_now=True, help_text='The last time at the instance was modified.', verbose_name='updated at')),
                ('deleted', models.BooleanField(default=False, help_text='It can be set to false, usefull to simulate deletion')),
                ('name', models.CharField(help_text='Nombre del descuento automático', max_length=100)),
                ('trigger', models.CharField(choices=[('birthday', 'Mes de Cumpleaños'), ('returning', 'Cliente Recurrente'), ('first_time', 'Primera Reserva'), ('loyalty', 'Programa de Lealtad')], max_length=10)),
                ('discount_percentage', models.DecimalField(decimal_places=2, help_text='Porcentaje de descuento', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('max_discount_usd', models.DecimalField(blank=True, decimal_places=2, help_text='Descuento máximo en USD', max_digits=10, null=True)),
                ('min_reservations', models.PositiveIntegerField(default=1, help_text='Mínimo de reservas previas (para cliente recurrente)')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': '🤖 Descuento Automático',
                'verbose_name_plural': '🤖 Descuentos Automáticos',
                'ordering': ['trigger'],
            },
        ),
        migrations.CreateModel(
            name='ExchangeRate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, help_text='When the instance was created.', verbose_name='created at')),
                ('updated', models.DateTimeField(auto_now=True, help_text='The last time at the instance was modified.', verbose_name='updated at')),
                ('deleted', models.BooleanField(default=False, help_text='It can be set to false, usefull to simulate deletion')),
                ('usd_to_sol', models.DecimalField(decimal_places=3, default=3.8, help_text='Tipo de cambio de USD a SOL (ej: 3.800)', max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('1.000'))])),
                ('is_active', models.BooleanField(default=True, help_text='Tipo de cambio activo')),
            ],
            options={
                'verbose_name': '💱 Tipo de Cambio',
                'verbose_name_plural': '💱 Tipos de Cambio',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='SeasonPricing',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, help_text='When the instance was created.', verbose_name='created at')),
                ('updated', models.DateTimeField(auto_now=True, help_text='The last time at the instance was modified.', verbose_name='updated at')),
                ('deleted', models.BooleanField(default=False, help_text='It can be set to false, usefull to simulate deletion')),
                ('season_type', models.CharField(choices=[('low', 'Temporada Baja'), ('high', 'Temporada Alta'), ('peak', 'Temporada Peak')], max_length=4)),
                ('start_date', models.DateField(help_text='Fecha de inicio de la temporada')),
                ('end_date', models.DateField(help_text='Fecha de fin de la temporada')),
                ('price_usd', models.DecimalField(decimal_places=2, help_text='Precio base por noche en USD', max_digits=10)),
                ('multiplier', models.DecimalField(decimal_places=2, default=1.0, help_text='Multiplicador del precio base (ej: 1.5 = 50% más caro)', max_digits=3, validators=[django.core.validators.MinValueValidator(Decimal('0.50'))])),
                ('is_active', models.BooleanField(default=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='season_pricing', to='property.property')),
            ],
            options={
                'verbose_name': '📅 Precio de Temporada',
                'verbose_name_plural': '📅 Precios de Temporada',
                'ordering': ['property', 'start_date'],
            },
        ),
        migrations.CreateModel(
            name='DiscountCode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, help_text='When the instance was created.', verbose_name='created at')),
                ('updated', models.DateTimeField(auto_now=True, help_text='The last time at the instance was modified.', verbose_name='updated at')),
                ('deleted', models.BooleanField(default=False, help_text='It can be set to false, usefull to simulate deletion')),
                ('code', models.CharField(help_text='Código de descuento', max_length=20, unique=True)),
                ('description', models.CharField(help_text='Descripción del descuento', max_length=200)),
                ('discount_type', models.CharField(choices=[('percentage', 'Porcentaje'), ('fixed_usd', 'Monto Fijo USD'), ('fixed_sol', 'Monto Fijo SOL')], max_length=10)),
                ('discount_value', models.DecimalField(decimal_places=2, help_text='Valor del descuento (porcentaje sin % o monto fijo)', max_digits=10)),
                ('min_amount_usd', models.DecimalField(blank=True, decimal_places=2, help_text='Monto mínimo en USD para aplicar descuento', max_digits=10, null=True)),
                ('max_discount_usd', models.DecimalField(blank=True, decimal_places=2, help_text='Descuento máximo en USD (para porcentajes)', max_digits=10, null=True)),
                ('start_date', models.DateField(help_text='Fecha de inicio de validez')),
                ('end_date', models.DateField(help_text='Fecha de fin de validez')),
                ('usage_limit', models.PositiveIntegerField(blank=True, help_text='Límite de usos (null = ilimitado)', null=True)),
                ('used_count', models.PositiveIntegerField(default=0, help_text='Veces usado')),
                ('is_active', models.BooleanField(default=True)),
                ('properties', models.ManyToManyField(blank=True, help_text='Propiedades aplicables (vacío = todas)', to='property.property')),
            ],
            options={
                'verbose_name': '🎫 Código de Descuento',
                'verbose_name_plural': '🎫 Códigos de Descuento',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='CancellationPolicy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, help_text='When the instance was created.', verbose_name='created at')),
                ('updated', models.DateTimeField(auto_now=True, help_text='The last time at the instance was modified.', verbose_name='updated at')),
                ('deleted', models.BooleanField(default=False, help_text='It can be set to false, usefull to simulate deletion')),
                ('name', models.CharField(help_text='Nombre de la política', max_length=100)),
                ('description', models.TextField(help_text='Descripción detallada de la política')),
                ('days_before_checkin', models.PositiveIntegerField(help_text='Días antes del check-in para aplicar esta política')),
                ('refund_percentage', models.DecimalField(decimal_places=2, help_text='Porcentaje de reembolso (0-100)', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('is_default', models.BooleanField(default=False, help_text='¿Es la política por defecto?')),
                ('is_active', models.BooleanField(default=True)),
                ('properties', models.ManyToManyField(blank=True, help_text='Propiedades aplicables (vacío = todas)', to='property.property')),
            ],
            options={
                'verbose_name': '📋 Política de Cancelación',
                'verbose_name_plural': '📋 Políticas de Cancelación',
                'ordering': ['days_before_checkin'],
            },
        ),
        migrations.CreateModel(
            name='AdditionalService',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, help_text='When the instance was created.', verbose_name='created at')),
                ('updated', models.DateTimeField(auto_now=True, help_text='The last time at the instance was modified.', verbose_name='updated at')),
                ('deleted', models.BooleanField(default=False, help_text='It can be set to false, usefull to simulate deletion')),
                ('name', models.CharField(help_text='Nombre del servicio', max_length=100)),
                ('description', models.TextField(help_text='Descripción del servicio')),
                ('price_usd', models.DecimalField(decimal_places=2, help_text='Precio en USD', max_digits=10)),
                ('service_type', models.CharField(choices=[('optional', 'Opcional'), ('mandatory', 'Obligatorio')], default='optional', max_length=9)),
                ('is_per_night', models.BooleanField(default=False, help_text='¿Se cobra por noche?')),
                ('is_per_person', models.BooleanField(default=False, help_text='¿Se cobra por persona?')),
                ('is_active', models.BooleanField(default=True)),
                ('properties', models.ManyToManyField(blank=True, help_text='Propiedades donde está disponible (vacío = todas)', to='property.property')),
            ],
            options={
                'verbose_name': '🛎️ Servicio Adicional',
                'verbose_name_plural': '🛎️ Servicios Adicionales',
                'ordering': ['name'],
            },
        ),
    ]
