# Generated by Django 4.2.11 on 2025-10-30 08:06

from django.db import migrations, models


def convert_numbers_to_house_names(apps, schema_editor):
    """Convierte player_id numéricos (1-4) a nombres de casas"""
    Property = apps.get_model('property', 'Property')
    
    NUMBER_TO_HOUSE_NAME = {
        '1': 'casa-austin',
        '2': 'casa-verde',
        '3': 'casa-amarilla',
        '4': 'casa-azul',
    }
    
    converted_count = 0
    skipped_count = 0
    
    for prop in Property.objects.all():
        if not prop.player_id:
            continue
            
        # Convertir a string y limpiar espacios
        player_id_str = str(prop.player_id).strip()
        
        if player_id_str in NUMBER_TO_HOUSE_NAME:
            old_value = prop.player_id
            prop.player_id = NUMBER_TO_HOUSE_NAME[player_id_str]
            prop.save(update_fields=['player_id'])
            converted_count += 1
            print(f"  ✓ {prop.name}: {old_value} → {prop.player_id}")
        elif player_id_str in NUMBER_TO_HOUSE_NAME.values():
            # Ya es un slug válido, no hacer nada
            print(f"  ✓ {prop.name}: '{prop.player_id}' (ya es un slug válido)")
        else:
            skipped_count += 1
            print(f"  ⚠ {prop.name}: '{prop.player_id}' (valor inválido - se recomienda revisión manual)")
    
    print(f"\nConvertidas: {converted_count} propiedades")
    print(f"Omitidas: {skipped_count} propiedades")


def reverse_conversion(apps, schema_editor):
    """Revierte nombres de casas a números"""
    Property = apps.get_model('property', 'Property')
    
    HOUSE_NAME_TO_NUMBER = {
        'casa-austin': '1',
        'casa-verde': '2',
        'casa-amarilla': '3',
        'casa-azul': '4',
    }
    
    for prop in Property.objects.all():
        if prop.player_id and prop.player_id in HOUSE_NAME_TO_NUMBER:
            prop.player_id = HOUSE_NAME_TO_NUMBER[prop.player_id]
            prop.save(update_fields=['player_id'])


class Migration(migrations.Migration):

    dependencies = [
        ('property', '0046_alter_property_player_id'),
    ]

    operations = [
        migrations.RunPython(convert_numbers_to_house_names, reverse_conversion),
        migrations.AlterField(
            model_name='property',
            name='player_id',
            field=models.CharField(blank=True, choices=[('casa-austin', 'Casa Austin'), ('casa-verde', 'Casa Verde'), ('casa-amarilla', 'Casa Amarilla'), ('casa-azul', 'Casa Azul')], help_text='Selecciona la casa para el sistema de música', max_length=50, null=True, verbose_name='Casa'),
        ),
    ]
