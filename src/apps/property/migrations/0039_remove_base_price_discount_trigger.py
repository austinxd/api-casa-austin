
# Generated by Django 4.2.11 on 2025-09-07 13:50

from django.db import migrations


def convert_base_price_discounts(apps, schema_editor):
    """Convierte descuentos BASE_PRICE_DISCOUNT a GLOBAL_PROMOTION con apply_only_to_base_price=True"""
    AutomaticDiscount = apps.get_model('property', 'AutomaticDiscount')
    
    # Actualizar todos los descuentos que usen BASE_PRICE_DISCOUNT
    base_price_discounts = AutomaticDiscount.objects.filter(trigger='base_price_discount')
    
    for discount in base_price_discounts:
        discount.trigger = 'global_promotion'
        discount.apply_only_to_base_price = True
        discount.save()
        print(f"Convertido descuento '{discount.name}' de BASE_PRICE_DISCOUNT a GLOBAL_PROMOTION con apply_only_to_base_price=True")


def reverse_convert_base_price_discounts(apps, schema_editor):
    """Reversa la conversión - no hacer nada ya que BASE_PRICE_DISCOUNT ya no existe"""
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('property', '0038_add_base_price_discount_trigger'),
    ]

    operations = [
        migrations.RunPython(
            convert_base_price_discounts,
            reverse_convert_base_price_discounts
        ),
        migrations.AlterField(
            model_name='automaticdiscount',
            name='trigger',
            field=models.CharField(choices=[('birthday', 'Mes de Cumpleaños'), ('returning', 'Cliente Recurrente'), ('first_time', 'Primera Reserva'), ('loyalty', 'Programa de Lealtad'), ('last_minute', 'Último Minuto'), ('global_promotion', 'Promoción Global')], max_length=20),
        ),
    ]
