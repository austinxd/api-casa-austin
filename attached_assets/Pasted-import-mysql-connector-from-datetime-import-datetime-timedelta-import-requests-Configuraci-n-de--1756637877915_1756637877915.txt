import mysql.connector
from datetime import datetime, timedelta
import requests

# Configuraci√≥n de la base de datos
db_config = {
    'user': 'Reservas',
    'password': '!Leonel123',
    'host': 'localhost',
    'database': 'ReservasCA',
}

# Configuraci√≥n de la API y flujo
api_token = "1680437.Pgur5IA4kUXccspOK389nZugThdLB9h"
flow_id = "1726722791692"
api_base_url = "https://app.chatgptbuilder.io/api"

# Conexi√≥n a la base de datos
connection = mysql.connector.connect(**db_config)
cursor = connection.cursor(dictionary=True)

# Consulta de usuarios con documento "dni" o "cex"
query = """
    SELECT id_manychat, date, document_type
    FROM clients_clients
    WHERE document_type IN ('dni', 'cex')
"""
cursor.execute(query)
usuarios = cursor.fetchall()

# Fecha actual
hoy = datetime.now().date()

# Lista de usuarios que cumplen la condici√≥n hoy
usuarios_a_enviar = []

for usuario in usuarios:
    subscriber_id = usuario['id_manychat']
    cumpleanos = usuario['date']
    
    if not subscriber_id or not cumpleanos:
        continue  # Saltamos registros incompletos

    # Ajustamos el a√±o del cumplea√±os al actual
    cumpleanos_date = cumpleanos.replace(year=hoy.year)
    
    # Calculamos la fecha de env√≠o (15 d√≠as antes)
    fecha_envio = cumpleanos_date - timedelta(days=15)
    
    # Verificamos si hoy es la fecha de env√≠o
    if hoy == fecha_envio:
        usuarios_a_enviar.append({
            "subscriber_id": subscriber_id,
            "cumpleanos": cumpleanos
        })

        # üëâ C√≥digo de env√≠o del flujo (comentado por ahora)

        # URL para enviar el flujo
        url = f"{api_base_url}/contacts/{subscriber_id}/send/{flow_id}"

        # Encabezados
        headers = {
            "X-ACCESS-TOKEN": api_token,
            "Content-Type": "application/json"
        }

        try:
            response = requests.post(url, headers=headers)
            if response.status_code == 200:
                print(f"‚úÖ Mensaje enviado a usuario {subscriber_id}")
            else:
                print(f"‚ùå Error enviando mensaje a {subscriber_id}. C√≥digo: {response.status_code}")
                print(response.text)
        except Exception as e:
            print(f"‚ö†Ô∏è Error con el usuario {subscriber_id}: {e}")


# Mostrar el resultado de la prueba
print("üîé Usuarios a los que se enviar√≠a el mensaje hoy (solo DNI o CEX):")
print(f"Total: {len(usuarios_a_enviar)}")
for u in usuarios_a_enviar:
    print(f"- Subscriber ID: {u['subscriber_id']} / Cumplea√±os: {u['cumpleanos']}")

# Cerrar conexi√≥n
cursor.close()
connection.close()